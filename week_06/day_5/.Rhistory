calculate(stat = "mean")
?visualise
library(infer)
library(infer)
library(tidyverse)
library(dplyr)
library(janitor)
library(infer)
null_distribution %>%
viusalise(bins = 30) +
shade_p_value(obs_stat = sleep_total_mean$mean_sleep_total, direction = "less")
null_distribution %>%
infer::viusalise(bins = 30) +
shade_p_value(obs_stat = sleep_total_mean$mean_sleep_total, direction = "less")
null_distribution <- sleep_total_mean %>%
specify(response = mean_sleep_total) %>%
hypothesize(null = "point", mu = 10.43373) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution <- sleep_total_mean %>%
specify(response = mean_sleep_total) %>%
hypothesize(null = "point", mu = 10.434) %>%
generate(reps = 10000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution <- sleep_total_mean %>%
specify(response = mean_sleep_total) %>%
hypothesize(null = "point", mu = 10.434) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
sleep_total_mean
sleep_total_mean <- msleep %>%
summarise(mean_sleep_total = mean(sleep_total))
sleep_total_mean
msleep <- msleep %>%
clean_names()
msleep %>%
add_row(name = Jabberwocky, sleep_total = 7)
msleep <- msleep %>%
clean_names()
msleep
msleep <- msleep %>%
clean_names()
msleep
msleep %>%
add_row(name = "Jabberwocky", sleep_total = 7)
sleep_total_mean <- msleep %>%
filter(name == "Jabberwocky")
sleep_total_mean
sleep_total_mean <- msleep %>%
filter(name == "Jabberwocky")
#  summarise(mean_sleep_total = mean(sleep_total))
sleep_total_mean
null_distribution <- sleep_total_mean %>%
specify(response = mean_sleep_total) %>%
hypothesize(null = "point", mu = 10.434) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
sleep_total_mean <- msleep %>%
filter(name == "Jabberwocky")
sleep_total_mean
sleep_total_mean <- msleep %>%
filter(name = "Jabberwocky")
sleep_total_mean <- msleep %>%
filter(name == "Jabberwocky")
sleep_total_mean
View(msleep_mean)
View(sleep_total_mean)
sleep_total_mean
msleep %>%
add_row(name = "Jabberwocky", sleep_total = 7)
msleep %>%
add_row(name = "Jabberwocky", sleep_total = 7)
msleep <-
msleep %>%
add_row(name = "Jabberwocky", sleep_total = 7)
sleep_total_mean <- msleep %>%
filter(name == "Jabberwocky")
sleep_total_mean
summarise(mean_sleep_total = mean(sleep_total))
sleep_total_mean <- msleep %>%
filter(name == "Jabberwocky") %>%
summarise(mean_sleep_total = mean(sleep_total))
sleep_total_mean
sleep_total_mean_jabberwocky <- msleep %>%
filter(name == "Jabberwocky") %>%
summarise(mean_sleep_total = mean(sleep_total))
sleep_total_mean
sleep_total_mean_jabberwocky
sleep_total_mean <- msleep %>%
summarise(mean_sleep_total = mean(sleep_total))
sleep_total_mean
null_distribution <- sleep_total_mean %>%
specify(response = mean_sleep_total) %>%
hypothesize(null = "point", mu = 10.434) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution <- sleep_total_mean %>%
specify(response = mean_sleep_total)
null_distribution <- sleep_total_mean %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 10.434) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 10.434) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
viusalise(bins = 30) +
shade_p_value(obs_stat = sleep_total_mean$mean_sleep_total, direction = "less")
null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = sleep_total_mean$mean_sleep_total, direction = "less")
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = sleep_total_mean$mean_sleep_total, direction = "less")
sleep_total_mean <- msleep %>%
summarise(mean_sleep_total = mean(sleep_total))
sleep_total_mean
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 10.393) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = sleep_total_mean$mean_sleep_total, direction = "less")
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = sleep_total_mean$mean_sleep_total, direction = "less")
p_value_1
p_value_1 <- null_distribution %>%
get_p_value(sleep_total_mean, direction = "less")
p_value_1
p_value_1 <- null_distribution %>%
get_p_value(sleep_total, direction = "less")
p_value_1 <- null_distribution %>%
get_p_value(sleep_total_mean_jabberwocky, direction = "less")
p_value_1
sleep_total_mean_jabberwocky <- msleep %>%
filter(name == "Jabberwocky")
sleep_total_mean_jabberwocky
sleep_total_mean_jabberwocky
summarise(mean_sleep_total = mean(sleep_total))
sleep_total_mean_jabberwocky <- msleep %>%
filter(name == "Jabberwocky")
sleep_total_mean_jabberwocky <- msleep %>%
filter(name == "Jabberwocky") %>%
summarise(mean_sleep_total = mean(sleep_total))
sleep_total_mean_jabberwocky
sleep_total_mean <- msleep %>%
summarise(mean_sleep_total = mean(sleep_total))
sleep_total_mean
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = sleep_total_mean$mean_sleep_total, direction = "less")
p_value_1 <- null_distribution %>%
get_p_value(sleep_total_mean_jabberwocky, direction = "less")
p_value_1
sleep_total_mean <- msleep %>%
summarise(mean_sleep_total = mean(sleep_total))
sleep_total_mean
null_distribution <- msleep %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = sleep_total_mean$mean_sleep_total, direction = "less")
p_value_1 <- null_distribution %>%
get_p_value(sleep_total_mean_jabberwocky, direction = "less")
p_value_1
shadeDist(
xshade = c(9, 12),
lower.tail = FALSE,
ddist = "dnorm",
parm1 = mean(rep_sample_50$mean_sleep_total),
parm2 = stand_errors$se_mean_sleep_total,
xlab = "mean_sleep_total"
)
?shadeDist
??shadeDist
install.packages("fastGraph")
library(fastGraph)
shadeDist(
xshade = c(9, 12),
lower.tail = FALSE,
ddist = "dnorm",
parm1 = mean(rep_sample_50$mean_sleep_total),
parm2 = stand_errors$se_mean_sleep_total,
xlab = "mean_sleep_total"
)
shadeDist(
xshade = c(9, 12),
lower.tail = FALSE,
ddist = "dnorm",
parm1 = mean(msleep$mean_sleep_total),
parm2 = stand_errors$se_mean_sleep_total,
xlab = "mean_sleep_total"
)
sample_200
sample_200 <- msleep %>%
rep_sample_n(size = 200, reps = 1)
sample_200 <- msleep %>%
rep_sample_n(size = 200, reps = 1, replace = TRUE)
sample_200
sample_200
null_distribution <- sample_200 %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = sleep_total_mean$mean_sleep_total, direction = "less")
std_errs <- sample_200 %>%
summarise(se_sleep_total_mean = sd(sleep_total_mean))
std_errs <- sample_200 %>%
summarise(se_sleep_total_mean = sd(sleep_total_mean))
std_errs
sleep_total_mean
sleep_total_mean <- sample_200 %>%
summarise(mean_sleep_total = mean(sleep_total))
sleep_total_mean
#simulating a sample of the animals, using replace to generate more samples than there are in the df
sample_200 <- msleep %>%
rep_sample_n(size = 200, reps = 1, replace = TRUE)
sleep_total_mean <- sample_200 %>%
summarise(mean_sleep_total = mean(sleep_total))
sleep_total_mean
#simulating a sample of the animals, using replace to generate more samples than there are in the df
sample_200 <- msleep %>%
rep_sample_n(size = 200, reps = 1, replace = TRUE)
sleep_total_mean <- sample_200 %>%
summarise(mean_sleep_total = mean(sleep_total))
sleep_total_mean
sleep_total_mean_jabberwocky <- sample_200 %>%
filter(name == "Jabberwocky") %>%
summarise(mean_sleep_total = mean(sleep_total))
sleep_total_mean_jabberwocky
std_errs <- sample_200 %>%
summarise(se_sleep_total_mean = sd(sleep_total_mean))
std_errs
std_errs
std_errs
```{r}
shadeDist(
xshade = c(9, 12),
lower.tail = FALSE,
ddist = "dnorm",
parm1 = mean(msleep$mean_sleep_total),
parm2 = stand_errors$se_mean_sleep_total,
xlab = "mean_sleep_total"
)
shadeDist(
xshade = c(9, 12),
lower.tail = FALSE,
ddist = "dnorm",
parm1 = mean(sample_200$mean_sleep_total),
parm2 = stand_errors$se_mean_sleep_total,
xlab = "mean_sleep_total"
)
shadeDist(
xshade = c(9, 12),
lower.tail = FALSE,
ddist = "dnorm",
parm1 = mean(sample_200$mean_sleep_total),
parm2 = std_errs$se_mean_sleep_total,
xlab = "mean_sleep_total"
)
shadeDist(
xshade = c(9, 12),
lower.tail = FALSE,
ddist = "dnorm",
parm1 = mean(sample_200$mean_sleep_total),
parm2 = std_errs$se_mean_sleep_total,
xlab = "mean_sleep_total"
)
shadeDist(
xshade = c(9, 12),
lower.tail = TRUE,
ddist = "dnorm",
parm1 = mean(sample_200$mean_sleep_total),
parm2 = std_errs$se_mean_sleep_total,
xlab = "mean_sleep_total"
)
shadeDist(
xshade = c(9, 12),
lower.tail = FALSE,
ddist = "dnorm",
parm1 = sample_200$mean_sleep_total,
parm2 = std_errs$se_mean_sleep_total,
xlab = "mean_sleep_total"
)
shadeDist(
xshade = c(9, 12),
lower.tail = FALSE,
ddist = "dnorm",
parm1 = mean(sample_200$mean_sleep_total),
parm2 = std_errs$se_mean_sleep_total,
xlab = "mean_sleep_total"
)
shadeDist(
xshade = c(9, 12),
lower.tail = FALSE,
ddist = "dnorm",
parm1 = sample_200$mean_sleep_total,
parm2 = std_errs$se_mean_sleep_total,
xlab = "mean_sleep_total"
)
null_distribution <- sample_200 %>%
specify(response = sleep_total) %>%
hypothesize(null = "point", mu = 7) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
null_distribution %>%
visualise(bins = 30) +
shade_p_value(obs_stat = sleep_total_mean$mean_sleep_total, direction = "less")
p_value_1 <- null_distribution %>%
get_p_value(sleep_total_mean_jabberwocky, direction = "less")
p_value_1
sample_200
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 10000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni" - "herbi"))
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 10000, type = "permute")
null_distribution_2
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 5000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
null_distribution_2 <- sample_200 %>%
filter(vore == "omni" & vore == "herbi")
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 5000, type = "permute")
null_distribution_2 <- sample_200
null_distribution_2
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 5000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 5000, type = "permute") %>%
calculate(stat = "diff in means", order = c("herbi" - "omni"))
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni" - "herbi"))
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in prop", order = c("omni" - "herbi"))
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni" - "herbi"))
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni" - "herbi"))
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means" order = c("omni", "herbi"))
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni" "herbi"))
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
sample_200_2 %>%
sample_200 %>%
filter(vore == "herbi" & vore == "omni")
sample_200_2 <-
sample_200 %>%
filter(vore == "herbi" & vore == "omni")
null_distribution_2 <- sample_200_2 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
infer::calculate(stat = "diff in means", order = c("omni", "herbi"))
null_distribution_2
null_distribution_2 <- msleep %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
msleep
msleep %>%
mutate(is_domesticated = ifelse(conservation == "domesticated", "Yes", "No")
msleep %>%
mutate(is_domesticated = ifelse(conservation = "domesticated", "Yes", "No")
msleep %>%
mutate(is_domesticated = ifelse(conservation == "domesticated", "Yes", "No")
msleep %>%
mutate(is_domesticated = ifelse(conservation = "domesticated", "Yes", "No"))
msleep %>%
mutate(is_domesticated = ifelse(conservation == "domesticated", "Yes", "No"))
msleep <-
msleep %>%
mutate(is_domesticated = ifelse(conservation == "domesticated", "Yes", "No"))
msleep <-
msleep %>%
mutate(is_domesticated = ifelse(conservation == "domesticated", "Yes", "No"))
msleep
msleep <-
msleep %>%
mutate(is_domesticated = ifelse(conservation == "domesticated", "Yes", "No"))
msleep
null_distribution_2 <- sample_200 %>%
specify(sleep_total ~ vore) %>%
hypothesise(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("omni", "herbi"))
null_distribution_3 <- msleep %>%
specify(response = is_domesticated, success = "yes") %>%
hypothesize(null = "point", p = 5) %>%
generate(reps = 5000, type = "simulate") %>%
calculate(stat = "prop")
null_distribution_3 <- msleep %>%
specify(response = is_domesticated, success = "Yes") %>%
hypothesize(null = "point", p = 5) %>%
generate(reps = 5000, type = "simulate") %>%
calculate(stat = "prop")
null_distribution_3 <- msleep %>%
specify(response = is_domesticated, success = "Yes") %>%
hypothesize(null = "point", p = 0.05) %>%
generate(reps = 5000, type = "simulate") %>%
calculate(stat = "prop")
null_distribution_3 <- msleep %>%
specify(response = is_domesticated, success = "Yes") %>%
hypothesize(null = "point", p = 0.05) %>%
generate(reps = 5000, type = "simulate") %>%
calculate(stat = "prop")
null_distribution_3
null_distribution_3 <- msleep %>%
specify(response ~ is_domesticated) %>%
hypothesize(null = "independence") %>%
generate(reps = 5000, type = "permute") %>%
calculate(stat = "diff in prop", order = c("Yes", "No"))
null_distribution_3 <- msleep %>%
specify(name ~ is_domesticated) %>%
hypothesize(null = "independence") %>%
generate(reps = 5000, type = "permute") %>%
calculate(stat = "diff in prop", order = c("Yes", "No"))
?calculate
null_distribution_3 <- msleep %>%
specify(name ~ is_domesticated) %>%
hypothesize(null = "independence") %>%
generate(reps = 5000, type = "permute") %>%
calculate(stat = "diff in prop", order = c("Yes", "No"))
