library(prob)
library(gtools)
library(tidyverse)
titanic <-
read_csv("data/titanic.csv")
titanic
titanic %>%
dplyr::count()
titanic %>%
dplyr::count()
titanic$class %>%
unique()
titanic %>%
filter(class == "1st" | class == "2nd" | class == "3rd") %>%
filter(survived == "yes") %>%
dplyr::count()
titanic %>%
filter(class == "1st" | class == "2nd" | class == "3rd") %>%
filter(survived == "no") %>%
dplyr::count()
500/1317
titanic %>%
filter(class == "deck crew" | class == "victualling crew" | class == "engineering crew" | class == "restaurant staff" ) %>%
filter(survived == "yes") %>%
dplyr::count()
titanic %>%
filter(class == "deck crew" | class == "victualling crew" | class == "engineering crew" | class == "restaurant staff" ) %>%
filter(survived == "no") %>%
dplyr::count()
211/890
211/890
rolldie(1)
rolldie(2)
rolldie(1) %>%
filter(<5)
rolldie(1)
rolldie(1) %>%
%>%
rolldie(1) %>%
%>%
rolldie(1) %>%
%>%
library(prob)
library(gtools)
library(tidyverse)
rolldie(1) %>%
%>%
rolldie(1) %>%
dplyr::filter(X1 < 5)
rolldie(1) %>%
dplyr::filter(X1 < 5)
rolldie(3)
rolldie(3) %>%
count()
rolldie(3) %>%
summarise(outcomes = count())
rolldie(3) %>%
summarise(count(outcomes))
rolldie(3) %>%
summarise(count())
rolldie(3) %>%
summarise()
rolldie(3) %>%
summarise(outcome = count(rolldie())
rolldie(3) %>%
summarise(outcome = count(rolldie()))
rolldie(3) %>%
count()
total_equals_5_6_7 <- c(5, 6, 7)
rolldie(4) %>%
mutate(
total_equals_5_6_7 = rowSums(c(5, 6, 7))
)
rolldie(4) %>%
mutate(
total_equals_5_6_7 = rowSums(. 5, 6, 7))
rolldie(4) %>%
mutate(
total_equals_5_6_7 = rowSums(. == 5, 6, 7))
rolldie(4) %>%
mutate(
total_equals_5_6_7 = rowSums(. = 5, 6, 7))
rolldie(4) %>%
mutate(
total_equals_5_6_7 = rowSums(. = 5 | 6 | 7))
rolldie(4) %>%
mutate(
total_equals_5_6_7 = rowSums(. == 5 | 6 | 7))
)
rolldie(4) %>%
mutate(
total_equals_5_6_7 = rowSums(. == 5 | 6 | 7))
)
rolldie(4) %>%
mutate(
total_equals_5_6_7 = rowSums(. > 5 & < 7))
rolldie(4) %>%
mutate(
total_equals_5_6_7 = rowSums(. > 5  < 7))
rolldie(4) %>%
mutate(
total_equals_5_6_7 = rowSums(. > 5 & < 7))
rolldie(4) %>%
mutate(
total_equals_5_6_7 = rowSums(. > 5 & . < 7))
)
rolldie(4) %>%
mutate(
total_equals_5_6_7 = rowSums(. >= 5 & . <= 7))
)
rolldie(4) %>%
mutate(
total_equals_5_6_7 = rowSums(. >= 5 & . <= 7))
rolldie(4) %>%
mutate(
total_equals_5_6_7 = rowSums(. >= 5 & . <= 7))
rolldie(4) %>%
mutate(
rowSums(. == total_equals_5_6_7))
rolldie(4) %>%
mutate(
rowSums(. == total_equals_5_6_7)) %>%
filter(rowSums == 1)
rolldie(4) %>%
mutate(
rowSums(. == total_equals_5_6_7)) %>%
dplyr::filter(rowSums == 1)
rolldie(4) %>%
mutate(
rowSums(. == total_equals_5_6_7))
total_equals_5_6_7 <- c(5 | 6 | 7)
rolldie(4) %>%
mutate(
rowSums(. == total_equals_5_6_7))
rolldie(3) %>%
summarise(X1 = n())
total_equals_5_6_7
total_equals_5_6_7 = 5
total_equals_5_6_7 = 5
total_equals_5_6_7 < 4
total_equals_5_6_7 < 8
total_equals_5_6_7 < 5
total_equals_5_6_7 < 6
total_equals_5_6_7 < 5
total_equals_5_6_7 <- c(5, 6, 7)
total_equals_5_6_7 < 5
total_equals_5_6_7 < 4
total_equals_5_6_7 < 2
total_equals_5_6_7 < 9
total_equals_5_6_7 < 9, 9
rolldie(4) %>%
mutate(
rowSums(. == 5))
rolldie(4) %>%
mutate(total = X1 + X2 + X3 +X4)
rolldie(4) %>%
mutate(total = X1 + X2 + X3 + X4) %>%
filter(total = 5 | 6 | 7)
rolldie(4) %>%
mutate(total = X1 + X2 + X3 + X4) %>%
filter(total == 5 | 6 | 7)
rolldie(4) %>%
mutate(total = X1 + X2 + X3 + X4) %>%
filter(total >= 5 & total <= 7)
rolldie(4) %>%
mutate(total = X1 + X2 + X3 + X4) %>%
filter(total >= 5 & total <= 7)
rolldie(4)
rolldie(4) %>%
mutate(total = X1 + X2 + X3 + X4) %>%
filter(total >= 5 & total <= 7)
rolldie(4)
34/1296
height_in_order <- c("a", "b", "c", "d", "e")
permutations(
n = 5,
r = 5,
v = height_in_order
) %>%
as_tibble
permutations(
n = 6,
r = 5,
v = height_in_order
) %>%
as_tibble
permutations(
n = 4,
r = 5,
v = height_in_order
) %>%
as_tibble
permutations(
n = 5,
r = 5,
v = height_in_order
) %>%
as_tibble
permutations(
n = 5,
r = 6,
v = height_in_order
) %>%
as_tibble
permutations(
n = 5,
r = 3,
v = height_in_order
) %>%
as_tibble
permutations(
n = 5,
r = 5,
v = height_in_order
) %>%
as_tibble
1/120
rolldie(6)
rolldie(6)
1/46656
rolldie(6)
rolldie(6)
as.integer(1/46656)
rolldie(6)
1/46656
options(scipen = 999)
1/46656
permutations(
n = 6,
r = 6,
v = rolldie(6)
) %>%
as_tibble
rolldie(6)
permutations(
n = 6,
r = 6
) %>%
as_tibble
permutations(
n = 6,
r = 6
) %>%
as_tibble
combinations(
n = 6,
r = 6
) %>%
as_tibble
permutations(
n = 6,
r = 6
) %>%
as_tibble
rolldie(6)
permutations(
n = 6,
r = 6
) %>%
as_tibble
#permutations allow for same group to be sequenced differently across the board, but will not allow repeats of any variable unless specifically requested to do so with repeats.allowed.
#i. the odds of
rolldie(6)
rolldie(6)
permutations(
n = 6,
r = 6
) %>%
as_tibble
#permutations allow for same group to be sequenced differently across the board, but will not allow repeats of any variable unless specifically requested to do so with repeats.allowed.
#i. the odds of seeing that specific sequence is 1 in all of the possible sequences of 6 dice rolls. So 1/46656
1/46656
rolldie(6)
permutations(
n = 6,
r = 6
) %>%
as_tibble
#permutations allow for same group to be sequenced differently across the board, but will not allow repeats of any variable unless specifically requested to do so with repeats.allowed.
#i. the odds of seeing that specific sequence is 1 in all of the possible sequences of 6 dice rolls. So 1/46656 = 0.00002143347 (below)
options(scipen = 999)
1/46656
#ii. the odds of it being any instance of rolls where no number shows up twice is the permutation calculation above divided by the total number of possible rolls. So 720/46656 =
720/46656
